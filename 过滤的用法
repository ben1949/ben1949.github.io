# -*- coding: utf-8 -*-
'''
如何在列表, 字典, 集合中根据条件筛选数据
通常做法是迭代遍历当前的列表，然后再将列表中满足条件的元素存在另外一个列表中
randint(a,b)   Return random integer in range [a, b], including both end points.

#匿名函数和列表解析的比较
#timeit函数的用法 timeit.timeit('func()','func所在的域',func要执行多少次，默认执行一百万次)

t3=Timer("test3()","from __main__ import test3")
print t3.timeit(1000000)
或者
print timeit('[x for x in [1,3,-5,5,3,3,3,3,3,33,1,2,3,4,5,5,5,5,5,2] if x >0 ]')

'''

'''
   列表过滤
   
'''
import time
import timeit
from _ast import Num


#通过迭代遍历列表的方式

data=[1,5,-3,-2,6,8,9]
res=[]
for x in data:
    if x >=0:
        res.append(x)
print res

from random import randint

randX=randint(-100,100)
print randX


#filter function
datalist = [ randint(-10,10)  for _ in xrange(10) ]
print datalist
print filter(lambda x: x > 0,datalist)

#list 列表解析
print [x for x in datalist if x >0 ]

#匿名函数和列表解析的比较 列表解析速度更快
#timeit函数的用法
from timeit import timeit
print timeit('filter(lambda x: x > 0, [1,3,-5,5,3,3,3,3,3,33,1,2,3,4,5,5,5,5,5,2])',number=1)
print timeit('[x for x in [1,3,-5,5,3,3,3,3,3,33,1,2,3,4,5,5,5,5,5,2] if x >0 ]',number=1)
print timeit('filter(lambda x: x > 0, datalist)',setup='from __main__ import datalist',number=1)
print timeit('[x for x in datalist if x >0 ]',setup='from __main__ import datalist',number=1)



'''
字典过滤

'''
dict1={x:randint(60,100) for x in xrange(20014540,20014550)}
print dict1
print {k:v for k,v in dict1.iteritems() if v >80}


'''
过滤集合

'''
set1=set(datalist)
print {x for x in set1 if x%3==0}

